global:
  repository: iswkudos/kudos-boards-docker
  env:
    APP_URI: https://example.com/boards
    APP_URI_PATH: /boards
    # MONGO_USER: admin
    # MONGO_PASSWORD: password
    MONGO_HOST: mongo-service:27017
    MONGO_PARAMS: replicaSet=replicaset
    S3_ENDPOINT: minio-service
    S3_ACCESS_KEY: ioueygr4t589
    S3_SECRET_KEY: 7a863d41-2d8f-4143-bc8a-02501edbea6f
    S3_BUCKET: kudos-boards

webfront:
  image:
    tag: webfront
  env:
    API_GATEWAY: https://example.com/api-boards
  ingress:
    hosts:
      - example.com
    path: /boards
    annotations:
      nginx.ingress.kubernetes.io/rewrite-target: /
core:
  image:
    tag: core
  env:
    NOTIFIER_EMAIL_HOST: <SMTP.SERVER.COM>
    NOTIFIER_EMAIL_USERNAME: <USERNAME>
    NOTIFIER_EMAIL_PASSWORD: <PASSWORD>
    # NODE_TLS_REJECT_UNAUTHORIZED: "0"
  ingress:
    hosts:
      - example.com
    path: /api-boards
    annotations:
      nginx.ingress.kubernetes.io/rewrite-target: /
app:
  image:
    tag: boards
provider:
  env:
    WIDGET_ID: Kudos Community Boards
    # NODE_TLS_REJECT_UNAUTHORIZED: "0"
user:
  env:
    # NODE_TLS_REJECT_UNAUTHORIZED: "0"
    CONNECTIONS_NAME: Connections
    CONNECTIONS_CLIENT_ID: kudosboards
    CONNECTIONS_CLIENT_SECRET: <CLIENT_SECRET>
    CONNECTIONS_URL: https://<CONNECTIONS_URL>
    ENSURE_TEAMS: >
      [{
        "name" : "<COMPANY NAME>",
        "teamName" : "connections",
        "provider" : "connections",
        "admins": ["person@company.com", "person2@company.com", "PROF_GUID_3"],
        "frameUrl": "https://[CONNECTIONS_URL]/boards",
        "oAuth" : {
          "baseURL" : "https://<CONNECTIONS_URL>"
        },
        "globalOAuth": true
      }]
